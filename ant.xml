<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project default="build" name="LanTools" xmlns:artifact="antlib:org.apache.maven.artifact.ant">
	<condition property="isWindows">
		<os family="windows" />
	</condition>
	<condition property="isUnix">
		<os family="unix" />
	</condition>
	<target name="create_jar">
		<artifact:dependencies pathId="deps.runtime.path" filesetId="deps.fileset" scopes="system, compile">
			<pom file="pom.xml" />
		</artifact:dependencies>
		<pathconvert property="mvnJars" refid="deps.runtime.path" pathsep=" ">
			<mapper type="flatten" from="${dependency.versions}" to="flatten" />
			<map from="" to="lib/" />
		</pathconvert>
		<property name="libJars" value="${mvnJars}" />
		<jar destfile="./deploy/app/LanTools.jar">
			<manifest>
				<attribute name="Main-Class" value="de.speedprog.lantools.LanTools" />
				<attribute name="Class-Path" value=". ${libJars}" />
			</manifest>
			<fileset dir="./deploy/classes" />
		</jar>
	</target>
	<target name="compile">
		<delete dir="./deploy/classes" />
		<mkdir dir="./deploy/classes" />
		<artifact:dependencies pathId="deps.compile.path" filesetId="deps.fileset" scopes="system, compile">
			<pom file="pom.xml" />
		</artifact:dependencies>
		<javac srcdir="./src" destdir="./deploy/classes" includeAntRuntime="false" target="1.7">
			<classpath refid="deps.compile.path" />
		</javac>
	</target>

	<target name="deploy_deps">
		<artifact:dependencies filesetId="deps.fileset" useScope="runtime">
			<pom file="pom.xml" />
		</artifact:dependencies>
		<!-- system dependencys are not in the fileset -->
		<artifact:dependencies pathId="deps.system.path" filesetId="deps.system.fileset" scopes="system">
			<pom file="pom.xml" />
		</artifact:dependencies>
		<pathconvert refid="deps.system.path" property="deps.system.list" pathsep="," dirsep="/">
			<map from="${basedir}/" to="" />
		</pathconvert>
		<!-- finished generating system deps, but they need to be in the ant dir -->
		<copy todir="./deploy/app/lib" flatten="true">
			<fileset refid="deps.fileset" />
			<fileset id="deps.system.fs" dir="./" includes="${deps.system.list}" />
		</copy>
	</target>



	<target name="deploy_files" depends="compile, create_jar, deploy_deps, app_version_string">
		<copy file="./LICENSE" tofile="./deploy/app/LICENSE" />
		<copy file="./NOTICE" tofile="./deploy/app/NOTICE" />
		<copy todir="./deploy/installer">
			<fileset dir="./installer" />
		</copy>
		<copy todir="./deploy/app/html">
			<fileset dir="./html" />
		</copy>
		<copy todir="./deploy/app/templates">
			<fileset dir="./templates" />
		</copy>
		<!-- modify installer script to contain the version number -->
		<!-- %version.string% replace with version -->

		<replace file="./deploy/installer/izpack_installer.xml" token="%version.string%" value="${app.version.string}" />
		<echo>Set installer version to ${app.version.string}</echo>
	</target>

	<target name="installer_windows" depends="deploy_files" if="isWindows">
		<echo>Creating installers on Windows</echo>
		<exec executable="cmd.exe" dir="./deploy/installer">
			<arg value="/c" />
			<arg value="build_all.bat" />
		</exec>
	</target>

	<target name="pack_nix" depends="deploy_files, app_version_string" if="isUnix">
		<echo>Packing .tar.gz on Nix</echo>
		<mkdir dir="./deploy/installer/out" />
		<tar destfile="./deploy/installer/out/LanTools-${app.version.string}.tar.gz" basedir="./deploy/app/" compression="gzip" />
	</target>

	<target name="build" depends="deploy_files, installer_windows, pack_nix">
	</target>

	<!-- get version number from application -->
	<target name="app_version_string" depends="compile, create_jar, deploy_deps">
		<exec executable="java" dir="./deploy/app" outputproperty="app.version.string">
			<arg line="-jar LanTools.jar --sversion" />
		</exec>
	</target>

	<target name="clean">
		<delete dir="./deploy" />
	</target>

</project>